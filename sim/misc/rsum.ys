.pos 0  
irmovq stack, %rsp # Set up stack pointer
call main # Execute main program
halt # Terminate program

# Sample linked list
.align 8
ele1:
.quad 0x00a
.quad ele2
ele2:
.quad 0x0b0
.quad ele3
ele3:
.quad 0xc00
.quad 0

main:
irmovq ele1, %rdi
call rsum  # sum(ele1)
ret

rsum:
# %rdi: head pointer of the linked list
xorq %rax, %rax  # sum <- 0
andq %rdi, %rdi  # set cc according to %rdi
je end

mrmovq (%rdi), %r8  # get ele->val
pushq %r8  # save %r8
mrmovq 8(%rdi), %rdi  # go to next
call rsum
popq %r8  # restore %r8
addq %r8, %rax  # add to sum

end:
ret

# Stack starts here and grows to lower addresses
.pos 0x100
stack:
