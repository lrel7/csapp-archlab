.pos 0  
irmovq stack, %rsp # Set up stack pointer
call main # Execute main program
halt # Terminate program

# Sample linked list
.align 8
ele1:
.quad 0x00a
.quad ele2
ele2:
.quad 0x0b0
.quad ele3
ele3:
.quad 0xc00
.quad 0

main:
irmovq ele1, %rdi
call sum  # sum(ele1)
ret

sum:
# %rdi: head pointer of the linked list
xorq %rax, %rax  # sum <- 0
jmp test  # go to test

loop:
mrmovq (%rdi), %r8  # get ele->val
addq %r8, %rax  # add to sum
mrmovq 8(%rdi), %rdi  # go to next

test:
andq %rdi, %rdi  # set cc
jne loop # Stop when 0
ret # Return

# Stack starts here and grows to lower addresses
.pos 0x100
stack:
